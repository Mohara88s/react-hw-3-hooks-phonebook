{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/Contact/Contact.module.css","App.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","hendelInputChange","event","currentTarget","value","className","styles","preventDefault","newContact","id","uuidv4","type","pattern","title","required","onChange","Filter","Contact","onDelete","button","onClick","ContactList","contacts","onDeleteContact","map","item","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","contactsFiltred","contact","toLowerCase","includes","toLocaleLowerCase","container","some","contactItem","alert","prevState","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03cb4bf4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__2fu0a\",\"item\":\"ContactList_item__DdpPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__2nn-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__2NtoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__2L-4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__8DjD4\"};","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const hendelInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const hendelSubmit = event => {\n    event.preventDefault();\n\n    const newContact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n    onSubmit(newContact);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.ContactForm} onSubmit={hendelSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={hendelInputChange}\n          value={name}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={hendelInputChange}\n          value={number}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.Filter}>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n      required\r\n      onChange={onChange}\r\n      value={value}\r\n    />\r\n  </label>\r\n);\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Contact.module.css';\r\n\r\nconst Contact = ({ id, name, number, onDelete }) => {\r\n  return (\r\n    <>\r\n      <p>\r\n        {name} {number}\r\n      </p>\r\n      <button\r\n        className={styles.button}\r\n        type=\"button\"\r\n        onClick={() => onDelete(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default Contact;\r\n","import React from 'react';\r\nimport Contact from './Contact/Contact';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.ContactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.item}>\r\n          <Contact\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDelete={onDeleteContact}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import { useState, useEffect } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport 'modern-normalize/modern-normalize.css';\nimport styles from './App.module.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? '';\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = contact => {\n    const { name } = contact;\n    const isAvailable = contacts.some(\n      contactItem => contactItem.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (isAvailable) {\n      return alert(`${name} is already in contacts.`);\n    }\n    setContacts(prevState => [contact, ...prevState]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState =>\n      prevState.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const hendelFindeInputChange = event => {\n    setFilter(event.currentTarget.value);\n  };\n  const contactsFiltred = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\n  );\n\n  return (\n    <div className={styles.container}>\n      <h2>Phonebook</h2>\n      <ContactForm contacts={contacts} onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={hendelFindeInputChange} />\n      <ContactList contacts={contactsFiltred} onDeleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}