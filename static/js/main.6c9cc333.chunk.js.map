{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/Contact/Contact.module.css","App.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","hendelInputChange","event","currentTarget","value","className","styles","preventDefault","newContact","id","uuidv4","type","pattern","title","required","onChange","Filter","Contact","onDelete","button","onClick","ContactList","contacts","onDeleteContact","map","item","App","state","filter","addContact","contact","some","contactItem","toLowerCase","alert","setState","prevState","deleteContact","contactId","hendelFindeInputChange","storageContacts","JSON","parse","localStorage","getItem","this","prevProps","setItem","stringify","contactsFiltred","includes","toLocaleLowerCase","container","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c9cc333.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__2nn-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__2NtoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__2L-4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__8DjD4\"};","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const hendelInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const hendelSubmit = event => {\n    event.preventDefault();\n\n    const newContact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n    onSubmit(newContact);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.ContactForm} onSubmit={hendelSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={hendelInputChange}\n          value={name}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={hendelInputChange}\n          value={number}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.Filter}>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n      required\r\n      onChange={onChange}\r\n      value={value}\r\n    />\r\n  </label>\r\n);\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Contact.module.css';\r\n\r\nconst Contact = ({ id, name, number, onDelete }) => {\r\n  return (\r\n    <>\r\n      <p>\r\n        {name} {number}\r\n      </p>\r\n      <button\r\n        className={styles.button}\r\n        type=\"button\"\r\n        onClick={() => onDelete(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default Contact;\r\n","import React from 'react';\r\nimport Contact from './Contact/Contact';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.ContactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.item}>\r\n          <Contact\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDelete={onDeleteContact}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport styles from './App.module.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const storageContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (storageContacts) {\r\n      this.setState({ contacts: storageContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = contact => {\r\n    const { contacts } = this.state;\r\n    const { name } = contact;\r\n    const isAvailable = contacts.some(\r\n      contactItem => contactItem.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (isAvailable) {\r\n      return alert(`${name} is already in contacts.`);\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [contact, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  hendelFindeInputChange = event => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const contactsFiltred = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\r\n    );\r\n    return (\r\n      <div className={styles.container}>\r\n        <h2>Phonebook</h2>\r\n        <ContactForm contacts={contacts} onSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.hendelFindeInputChange} />\r\n        <ContactList\r\n          contacts={contactsFiltred}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__2fu0a\",\"item\":\"ContactList_item__DdpPW\"};"],"sourceRoot":""}